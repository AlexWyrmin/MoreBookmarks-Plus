custom_nb_restore_byzantine_decision = {
	picture = "gfx/interface/illustrations/decisions/custom_nb_restore_byzantine_decision.dds"
    major = yes
	desc = custom_nb_restore_byzantine_decision_desc
	
	

	ai_goal = yes

	is_shown = {#####
		is_lowborn = no	
		is_landed = yes
		is_independent_ruler = yes		
					
		has_culture_group = culture_group:byzantine_group
		
		faith = faith:orthodox
	
						
		highest_held_title_tier >= tier_duchy
		
		
		NOR = {	#Title existence cnditions.
			has_title = title:e_hre
			has_title = title:e_latin_empire
			highest_held_title_tier = tier_empire
		}
		AND = {
			NOT = { exists = title:e_byzantium.holder }
		}
		
	}
	

	is_valid = {
	
		OR = {
			has_title = title:k_trebizond	
			has_title = title:k_epirus
			has_title = title:k_nikaea
			has_title = title:k_thessalonika			
		}		

		highest_held_title_tier >= tier_kingdom			
		completely_controls = title:c_byzantion		
		completely_controls = title:d_thrace
		completely_controls = title:d_strymon	
		completely_controls = title:d_aegean_islands		
		completely_controls = title:d_optimatoi
		completely_controls = title:d_opsikion
		faith = faith:orthodox
						
	}

	is_valid_showing_failures_only = {######
		is_imprisoned = no
		is_independent_ruler = yes
		is_at_war = no
	}
	
	cost = {
		prestige = 2000
	}

	effect = {
	
	   
		custom_tooltip = custom_nb_restore_byzantine_decision_effect_tooltip
				
		show_as_tooltip = { custom_nb_restore_byzantine_decision_effect = yes }
		trigger_event = custom_nb_restore_byzantine_decision.0001
		every_player = {
			limit = {
				NOT = { this = root }
				OR = { exists = capital_province
				capital_province = { geographical_region = world_europe }
				capital_province = { geographical_region = world_asia_minor }
				capital_province = { geographical_region = world_middle_east }				
				}
			}
			trigger_event = custom_nb_restore_byzantine_decision.0002
		}		
		
		
		
	}
	
	ai_potential = {
		is_ruler = yes
	}

	ai_will_do = {
		base = 1000
	}
}
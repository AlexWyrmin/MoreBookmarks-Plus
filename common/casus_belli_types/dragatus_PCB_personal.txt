#From Pluribus Casibus Belli, a long dead mod. Only took the one CB that was something that should be base game as the others were iffy
dragatus_PCB_liberate_family_war = {
	group = dragatus_PCB_personal
	
	allowed_against_character = {

		# Improve performance by making the CB only usable by or against human players.
		# If this basic check fails the game won't bother checking the complex conditions below.
		OR = {
			scope:attacker = { is_ai = no }
			scope:defender = { is_ai = no }
		}

		# If this basic check fails the game won't bother checking the complex conditions below.
		OR = {
			scope:attacker = { is_ai = no }
			scope:attacker = { dragatus_PCB_liberation_war_ai_trigger = yes } # make sure AI has suitable personality
		}

		# Before checking long list of complex conditions make sure the target isn't any liege.
		scope:attacker = {		
			NOT = {
				any_liege_or_above = {
					this = scope:defender
				}
			}
		}

		scope:defender = {
			# Final basic check - can target only independent rulers and vassals of the same liege.
			OR = {
				is_independent_ruler = yes
				liege = scope:attacker.liege # same liege
			}

			# Now that we made sure the defender is a valid target for wars in general we can scan their entire realm  to see if someone from it stole attacker's spouse, has attacker's family/friends/lovers in prison, forced attacker's family/friends/lovers into concubinage, or forced attacker's family/friends/lover to join court.
			# Check scripted triggers for details.
			dragatus_PCB_is_valid_liberation_war_target_trigger = yes
		}
	}

	cost = {
		prestige = {
			value = 0
			add = {
				value = medium_prestige_value
				desc = CB_BASE_COST
			}
			if = {
				limit = {
					scope:attacker = { has_government = tribal_government }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			multiply = common_cb_prestige_cost_multiplier
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
		always = yes
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = { is_local_player = yes }
				}
				desc = dragatus_PCB_liberate_family_war_victory_desc_attacker
			}
			triggered_desc = {
				trigger = {
					scope:defender = { is_local_player = yes }
				}
				desc = dragatus_PCB_liberate_family_war_victory_desc_defender
			}
			desc = dragatus_PCB_liberate_family_war_victory_desc
		}
	}

	on_victory = {
		scope:defender = {
			dragatus_PCB_liberate_family_and_friends_effect = yes
			if = {
				limit = {
					highest_held_title_tier >= tier_county # Might even be emperor.
				}
				every_vassal = {
					dragatus_PCB_liberate_family_and_friends_effect = yes
					if = {
						limit = {
							highest_held_title_tier >= tier_county # Might be king.
						}
						every_vassal = {
							dragatus_PCB_liberate_family_and_friends_effect = yes
							if = {
								limit = {
									highest_held_title_tier >= tier_county # Can still be duke.
								}
								every_vassal = {
									dragatus_PCB_liberate_family_and_friends_effect = yes
									if = {
										limit = {
											highest_held_title_tier = tier_county
										}
										every_vassal = {
											# These can only be barons, so we stop looking at lower vassals.
											dragatus_PCB_liberate_family_and_friends_effect = yes
										}
									}
								}
							}
						}
					}
				}
			}
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

	}

	on_white_peace_desc = {
		desc = dragatus_PCB_white_peace_generic_desc
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = { is_local_player = yes }
				}
				desc = dragatus_PCB_defeated_and_imprisoned_attacker_desc
			}
			#desc = dragatus_PCB_defeated_and_imprisoned_generic_desc
		}
	}

	on_defeat = {
		#Removed the imprison part. It made no sense as to why or how the attacker would be imprisoned for failing. Better to just add a gold cost
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 1
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}


		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	should_invalidate = {
		scope:defender = {
			dragatus_PCB_is_valid_liberation_war_target_trigger = no
		}
	}

	on_invalidated_desc = {
		desc = msg_invalidate_war_title
	}
	
	on_invalidated = {
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	#transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGATUS_PCB_LIBERATE_FAMILY_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 50
	#attacker_score_from_battles_scale = 50
	#defender_score_from_battles_scale = 50
	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 100

	max_ai_diplo_distance_to_title = 500
	min_ai_score = 100
}